{
  "openapi": "3.0.1",
  "info": {
    "version": "1.0.2",
    "title": "Water Tracker",
    "description": "A web application that allows you to track daily water consumption"
  },
  "servers": [{ "url": "https://tracker-of-water-oqqk.onrender.com/api" }],
  "tags": [
    {
      "name": "API-Docs",
      "description": "Api documentation"
    },
    {
      "name": "Auth",
      "description": "Authorization endpoints"
    },
    {
      "name": "User",
      "description": "User profile endpoints"
    },
    {
      "name": "WaterRate",
      "description": "User water norm endpoints"
    },
    {
      "name": "Water",
      "description": "User water data endpoints"
    },

    {
      "name": "WaterToday",
      "description": "User water today data endpoints"
    },
    {
      "name": "WaterMonth",
      "description": "User water month data endpoints"
    }
  ],
  "paths": {
    "/api-docs": {
      "get": {
        "tags": ["API-Docs"],
        "summary": "API documentation (this document)",

        "requestBody": {},

        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {}
          }
        }
      }
    },

    "/auth/verify/{verificationToken}": {
      "get": {
        "tags": ["Auth"],
        "summary": "User e-mail verification",

        "parameters": [],

        "requestBody": {},

        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {}
          }
        }
      }
    },

    "/auth/recover-password/{passwordRecoveryToken}": {
      "get": {
        "tags": ["Auth"],
        "summary": "Send e-mail for recovery user password",

        "parameters": [],
        "security": [{ "Bearer": [] }],

        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": ""
              }
            }
          }
        },

        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": ""
                }
              }
            }
          }
        }
      }
    },

    "/auth/register": {
      "post": {
        "tags": ["Auth"],
        "summary": "User registration",

        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrationRequest"
              }
            }
          }
        },

        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationResponse"
                }
              }
            }
          }
        }
      }
    },

    "/auth/verify": {
      "post": {
        "tags": ["Auth"],
        "summary": "User re-verification",

        "parameters": [],

        "requestBody": {},

        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {}
          }
        }
      }
    },

    "/auth/login": {
      "post": {
        "tags": ["Auth"],
        "summary": "User login",

        "parameters": [],

        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/LoginRequest" }
            }
          }
        },

        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {}
          },
          "204": {
            "description": "User is logout"
          },
          "400": {
            "description": "Bad request (invalid request body)"
          },
          "401": {
            "description": "Email or password is wrong"
          }
        }
      }
    },

    "/auth/logout": {
      "post": {
        "tags": ["Auth"],
        "summary": "User logout",

        "parameters": [],
        "security": [{ "Bearer": [] }],

        "requestBody": {},

        "responses": {
          "204": {
            "description": "User is logout"
          },
          "400": {
            "description": "Bad request (invalid request body)"
          },
          "401": {
            "description": "Not authorized"
          }
        }
      }
    },

    "/auth/recover-password/": {
      "post": {
        "tags": ["Auth"],
        "summary": "Recovery user password",

        "parameters": [],
        "security": [{ "Bearer": [] }],

        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": ""
              }
            }
          }
        },

        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationResponse"
                }
              }
            }
          }
        }
      }
    },

    "/user/current": {
      "get": {
        "tags": ["User"],
        "summary": "Get user profile",

        "parameters": [],
        "security": [{ "Bearer": [] }],

        "requestBody": {},

        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {}
          }
        }
      }
    },

    "/user/avatars": {
      "patch": {
        "tags": ["User"],
        "summary": "Change user avatar",

        "parameters": [],
        "security": [{ "Bearer": [] }],

        "requestBody": {},

        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {}
          }
        }
      }
    },

    "/user": {
      "patch": {
        "tags": ["User"],
        "summary": "Update user profile",

        "parameters": [],
        "security": [{ "Bearer": [] }],

        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserUpdateRequest"
              }
            }
          }
        },

        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {}
          }
        }
      }
    },

    "/waterrate": {
      "patch": {
        "tags": ["WaterRate"],
        "summary": "Change water goal",

        "parameters": [],
        "security": [{ "Bearer": [] }],

        "requestBody": {},

        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {}
          }
        }
      }
    },

    "/water": {
      "post": {
        "tags": ["Water"],
        "summary": "Create water record",

        "parameters": [],
        "security": [{ "Bearer": [] }],

        "requestBody": {},

        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {}
          }
        }
      }
    },

    "/water/{waterRecordId}": {
      "put": {
        "tags": ["Water"],
        "summary": "Change water record",

        "parameters": [],
        "security": [{ "Bearer": [] }],

        "requestBody": {},

        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {}
          }
        }
      },

      "delete": {
        "tags": ["Water"],
        "summary": "Delete user water record",

        "parameters": [],
        "security": [{ "Bearer": [] }],

        "requestBody": {},

        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {}
          }
        }
      }
    },

    "/today": {
      "get": {
        "tags": ["WaterToday"],
        "summary": "Get current date water records",

        "parameters": [],
        "security": [{ "Bearer": [] }],

        "requestBody": {},

        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {}
          }
        }
      }
    },

    "/month": {
      "get": {
        "tags": ["WaterMonth"],
        "summary": "Get month water records",

        "parameters": [],
        "security": [{ "Bearer": [] }],

        "requestBody": {},

        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {}
          }
        }
      }
    }
  },

  "components": {
    "schemas": {
      "User (db)": {
        "type": "object",
        "required": [
          "name",
          "email",
          "password",
          "avatarURL",
          "verificationToken"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "User name",
            "example": "Olexandra"
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email",
            "example": "user@gmail.com"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "pAsSwOrD!"
          },
          "gender": {
            "type": "string",
            "description": "User's gender",
            "enum": ["woman", "man"],
            "default": "woman",
            "example": "woman"
          },
          "avatarURL": {
            "type": "string",
            "description": "User's avatar",
            "default": ""
          },
          "verificationToken": {
            "type": "string",
            "description": "e-mail verification token",
            "default": ""
          },
          "token": {
            "type": "string",
            "description": "User's JWT string",
            "default": null
          },
          "verify": {
            "type": "boolean",
            "description": "Is the user's e-mail address verified?",
            "default": false
          },
          "dailyWaterGoal": {
            "type": "integer",
            "format": "int32",
            "description": "User's daily water norma",
            "minimum": 0,
            "maximum": 15000,
            "default": 2000,
            "example": 5000
          }
        }
      },

      "WaterRecord (db)": {
        "type": "object",
        "required": ["entryDate"],
        "properties": {
          "userId": {
            "type": "string",
            "format": "",
            "description": "",
            "default": "",
            "example": ""
          },
          "entryDate": {
            "type": "string",
            "format": "date-time",
            "description": "Date and time of data entry",
            "example": "2022-02-24T08:30:00Z"
          },
          "dailyWaterGoal": {
            "type": "integer",
            "format": "int32",
            "description": "User's daily water norma",
            "minimum": 0,
            "maximum": 15000,
            "default": 2000,
            "example": 2500
          },
          "consumedWater": {
            "type": "integer",
            "format": "int32",
            "description": "User water consumption amount (ml)",
            "minimum": 0,
            "default": 0,
            "example": 250
          },
          "consumedTimes": {
            "type": "integer",
            "format": "int32",
            "description": "User's water consumption amount (times)",
            "minimum": 0,
            "default": 0,
            "example": 4
          },
          "consumedWaterPercentage": {
            "type": "integer",
            "format": "int32",
            "description": "User's water consumption percent (relative to the norm)",
            "minimum": 0,
            "default": 0,
            "example": 80
          },
          "waterIntakes": {
            "type": "array",
            "items": {
              "type": "object",
              "required": ["ml", "consumedAt"],
              "properties": {
                "ml": {
                  "type": "integer",
                  "format": "int32",
                  "description": "User's water consumption amount (ml)",
                  "minimum": 0,
                  "maximum": 5000,
                  "example": 250
                },
                "consumedAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "User's water consumption date and time",
                  "example": "2022-02-24T08:30:00Z"
                }
              }
            }
          }
        }
      },

      "RegistrationRequest": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email",
            "example": "user@gmail.com"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "pAsSwOrD!"
          }
        }
      },

      "RegistrationResponse": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email",
            "example": "user@gmail.com"
          }
        }
      },

      "LoginRequest": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email",
            "example": "user@gmail.com"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "pAsSwOrD!"
          }
        }
      },

      "ReverificateRequest": {
        "type": "object",
        "required": ["email"],
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email",
            "example": "user@example.com"
          }
        }
      },

      "UserUpdateRequest": {
        "type": "object",
        "required": [],
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email",
            "example": "user@gmail.com"
          },
          "name": {
            "type": "string",
            "description": "User's name",
            "example": "Adam"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "pAsSwOrD!"
          }
        }
      }
    },

    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
